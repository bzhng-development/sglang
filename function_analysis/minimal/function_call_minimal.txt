function_call/base_format_detector.py:
  BaseFormatDetector.__init__(self)
  BaseFormatDetector._ends_with_partial_token(self,buffer,bot_token)
  BaseFormatDetector._get_tool_indices(self,tools)
  BaseFormatDetector.build_ebnf(self,tools)
  BaseFormatDetector.detect_and_parse(self,text,tools)
  BaseFormatDetector.has_tool_call(self,text)
  BaseFormatDetector.parse_base_json(self,action,tools)
  BaseFormatDetector.parse_streaming_increment(self,new_text,tools)
  BaseFormatDetector.structure_info(self)
  BaseFormatDetector.supports_structural_tag(self)
function_call/deepseekv31_detector.py:
  DeepSeekV31Detector.__init__(self)
  DeepSeekV31Detector.build_ebnf(self,tools)
  DeepSeekV31Detector.detect_and_parse(self,text,tools)
  DeepSeekV31Detector.has_tool_call(self,text)
  DeepSeekV31Detector.parse_streaming_increment(self,new_text,tools)
  DeepSeekV31Detector.structure_info(self)
function_call/deepseekv3_detector.py:
  DeepSeekV3Detector.__init__(self)
  DeepSeekV3Detector.build_ebnf(self,tools)
  DeepSeekV3Detector.detect_and_parse(self,text,tools)
  DeepSeekV3Detector.has_tool_call(self,text)
  DeepSeekV3Detector.parse_streaming_increment(self,new_text,tools)
  DeepSeekV3Detector.structure_info(self)
function_call/ebnf_composer.py:
  EBNFComposer._handle_enum(prop,function_format)
  EBNFComposer._handle_type(prop,function_format)
  EBNFComposer.build_ebnf(tools,function_format,sequence_start_token,sequence_end_token,individual_call_start_token,individual_call_end_token,tool_call_separator,call_rule_fmt,key_value_rule_fmt,key_value_separator)
  EBNFComposer.format_enum_val(v)
  EBNFComposer.get_type_mapping(function_format)
  EBNFComposer.get_value_rule(prop,function_format)
function_call/function_call_parser.py:
  FunctionCallParser.__init__(self,tools,tool_call_parser)
  FunctionCallParser.get_ebnf(self,tool_choice)
  FunctionCallParser.get_structure_constraint(self,tool_choice)
  FunctionCallParser.get_structure_tag(self)
  FunctionCallParser.has_tool_call(self,text)
  FunctionCallParser.parse_non_stream(self,full_text)
  FunctionCallParser.parse_stream_chunk(self,chunk_text)
function_call/glm4_moe_detector.py:
  Glm4MoeDetector.__init__(self)
  Glm4MoeDetector.build_ebnf(self,tools)
  Glm4MoeDetector.detect_and_parse(self,text,tools)
  Glm4MoeDetector.has_tool_call(self,text)
  Glm4MoeDetector.parse_streaming_increment(self,new_text,tools)
  Glm4MoeDetector.structure_info(self)
  Glm4MoeDetector.supports_structural_tag(self)
  get_argument_type(func_name,arg_key,defined_tools)
  parse_arguments(json_value)
function_call/gpt_oss_detector.py:
  GptOssDetector.__init__(self)
  GptOssDetector._extract_tool_call_from_event(self,content,tool_indices,tool_index)
  GptOssDetector.build_ebnf(self,tools)
  GptOssDetector.detect_and_parse(self,text,tools)
  GptOssDetector.has_tool_call(self,text)
  GptOssDetector.parse_streaming_increment(self,new_text,tools)
  GptOssDetector.structure_info(self)
function_call/kimik2_detector.py:
  KimiK2Detector.__init__(self)
  KimiK2Detector.build_ebnf(self,tools)
  KimiK2Detector.detect_and_parse(self,text,tools)
  KimiK2Detector.get_info(name)
  KimiK2Detector.has_tool_call(self,text)
  KimiK2Detector.parse_streaming_increment(self,new_text,tools)
  KimiK2Detector.structure_info(self)
function_call/llama32_detector.py:
  Llama32Detector.__init__(self)
  Llama32Detector.build_ebnf(self,tools)
  Llama32Detector.detect_and_parse(self,text,tools)
  Llama32Detector.has_tool_call(self,text)
  Llama32Detector.structure_info(self)
function_call/mistral_detector.py:
  MistralDetector.__init__(self)
  MistralDetector._extract_json_array(self,text)
  MistralDetector.build_ebnf(self,tools)
  MistralDetector.detect_and_parse(self,text,tools)
  MistralDetector.has_tool_call(self,text)
  MistralDetector.structure_info(self)
function_call/pythonic_detector.py:
  PythonicDetector.__init__(self)
  PythonicDetector._find_matching_bracket(self,buffer,start)
  PythonicDetector._get_parameter_value(self,val)
  PythonicDetector._strip_and_split_buffer(self,buffer)
  PythonicDetector._text_strip(text)
  PythonicDetector.build_ebnf(self,tools)
  PythonicDetector.detect_and_parse(self,text,tools)
  PythonicDetector.has_tool_call(self,text)
  PythonicDetector.parse_streaming_increment(self,new_text,tools)
  PythonicDetector.structure_info(self)
  PythonicDetector.supports_structural_tag(self)
function_call/qwen25_detector.py:
  Qwen25Detector.__init__(self)
  Qwen25Detector.build_ebnf(self,tools)
  Qwen25Detector.detect_and_parse(self,text,tools)
  Qwen25Detector.has_tool_call(self,text)
  Qwen25Detector.parse_streaming_increment(self,new_text,tools)
  Qwen25Detector.structure_info(self)
function_call/qwen3_coder_detector.py:
  Qwen3CoderDetector.__init__(self)
  Qwen3CoderDetector._extract(self,text,tools)
  Qwen3CoderDetector._parse_and_stream_parameters(self,text_to_parse)
  Qwen3CoderDetector._parse_block(self,block,tools)
  Qwen3CoderDetector._reset_streaming_state(self)
  Qwen3CoderDetector.build_ebnf(self,tools)
  Qwen3CoderDetector.detect_and_parse(self,text,tools)
  Qwen3CoderDetector.has_tool_call(self,text)
  Qwen3CoderDetector.parse_streaming_increment(self,new_text,tools)
  Qwen3CoderDetector.structure_info(self)
  Qwen3CoderDetector.supports_structural_tag(self)
  _safe_val(raw)
function_call/step3_detector.py:
  Step3Detector.__init__(self)
  Step3Detector._parse_partial_tool_call(self,tools)
  Step3Detector._parse_steptml_invoke(self,text,tools)
  Step3Detector._reset_streaming_state(self)
  Step3Detector.build_ebnf(self,tools)
  Step3Detector.detect_and_parse(self,text,tools)
  Step3Detector.has_tool_call(self,text)
  Step3Detector.parse_streaming_increment(self,new_text,tools)
  Step3Detector.structure_info(self)
  Step3Detector.supports_structural_tag(self)
  get_argument_type(func_name,arg_key,defined_tools)
  parse_arguments(value)
function_call/utils.py:
  _find_common_prefix(s1,s2)
  _is_complete_json(input_str)
  _partial_json_loads(input_str,flags)
