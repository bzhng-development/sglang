metrics/collector.py:
  SchedulerMetricsCollector.__init__(self,labels)
  SchedulerMetricsCollector._log_gauge(self,gauge,data)
  SchedulerMetricsCollector.increment_bootstrap_failed_reqs(self)
  SchedulerMetricsCollector.increment_transfer_failed_reqs(self)
  SchedulerMetricsCollector.log_stats(self,stats)
  TimeStats.__str__(self)
  TimeStats.format_duration(self,duration)
  TimeStats.get_type(self)
  TokenizerMetricsCollector.__init__(self,labels,bucket_time_to_first_token,bucket_inter_token_latency,bucket_e2e_request_latency,collect_tokens_histogram)
  TokenizerMetricsCollector._log_histogram(self,histogram,data)
  TokenizerMetricsCollector.observe_inter_token_latency(self,internval,num_new_tokens)
  TokenizerMetricsCollector.observe_one_aborted_request(self)
  TokenizerMetricsCollector.observe_one_finished_request(self,prompt_tokens,generation_tokens,cached_tokens,e2e_latency,has_grammar)
  TokenizerMetricsCollector.observe_time_to_first_token(self,value)
metrics/func_timer.py:
  async async_wrapper(*args,**kwargs)
  enable_func_timer()
  exponential_buckets(start,width,length)
  measure(func)
  sync_wrapper(*args,**kwargs)
  time_func_latency(func,name)
