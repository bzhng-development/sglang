
# python/sglang/srt/layers/moe/token_dispatcher/base_dispatcher.py
  DispatchOutputChecker.format_is_standard(dispatch_output)
  DispatchOutputChecker.format_is_deepep_normal(dispatch_output)
  DispatchOutputChecker.format_is_deepep_ll(dispatch_output)
  DispatchOutputChecker.format_is_deepep(dispatch_output)
  DispatchOutputChecker.format_is_ascent_ll(dispatch_output)
  DispatchOutputFormat.is_standard()
  DispatchOutputFormat.is_deepep_normal()
  DispatchOutputFormat.is_deepep_ll()
  DispatchOutputFormat.is_deepep()
  DispatchOutputFormat.is_ascent_ll()
  DispatchOutput.format()
  BaseDispatcher.dispatch()
  BaseDispatcher.combine()

# python/sglang/srt/layers/moe/token_dispatcher/deepep.py
  DeepEPNormalOutput.format()
  DeepEPLLOutput.format()
  AscendDeepEPLLOutput.format()
  DeepEPBuffer.get_deepep_buffer(cls, group, hidden_size, param_bytes, deepep_mode, num_max_dispatch_tokens_per_rank, num_experts)
  DeepEPBuffer.clean_buffer(cls)
  DeepEPBuffer.set_dispatch_mode_as_normal(cls)
  DeepEPBuffer.set_dispatch_mode_as_low_latency(cls)
  DeepEPConfig.__init__()
  DeepEPConfig.get_instance(cls)
  _DeepEPDispatcherImplBase.__init__(group, router_topk, permute_fusion, num_experts, num_local_experts, hidden_size, params_dtype, deepep_mode)
  _DeepEPDispatcherImplBase.dispatch_a(hidden_states, topk_idx, topk_weights)
  _DeepEPDispatcherImplBase.dispatch_b()
  _DeepEPDispatcherImplBase.combine_a(hidden_states, topk_idx, topk_weights)
  _DeepEPDispatcherImplBase.combine_b()
  _DeepEPDispatcherImplNormal.__init__(async_finish)
  _DeepEPDispatcherImplNormal.dispatch_a(hidden_states, topk_idx, topk_weights)
  _DeepEPDispatcherImplNormal.dispatch_b(hidden_states, topk_idx, topk_weights, previous_event)
  _DeepEPDispatcherImplNormal.combine_a(hidden_states, topk_idx, topk_weights)
  _DeepEPDispatcherImplNormal.combine_b(output, previous_event)
  _DeepEPDispatcherImplLowLatency.__init__(return_recv_hook)
  _DeepEPDispatcherImplLowLatency.dispatch_a(hidden_states, topk_idx, topk_weights)
  _DeepEPDispatcherImplLowLatency.dispatch_b(hidden_states, topk_idx, topk_weights, masked_m, expected_m, event, hook)
  _DeepEPDispatcherImplLowLatency.combine_a(hidden_states, topk_idx, topk_weights)
  _DeepEPDispatcherImplLowLatency.combine_b(hidden_states, event, hook)
  DeepEPDispatcher.__init__(group, router_topk, permute_fusion, num_experts, num_local_experts, hidden_size, params_dtype, deepep_mode, async_finish, return_recv_hook)
  DeepEPDispatcher.dispatch()
  DeepEPDispatcher.dispatch_a(hidden_states, topk_idx, topk_weights, forward_batch)
  DeepEPDispatcher.dispatch_b()
  DeepEPDispatcher.combine()
  DeepEPDispatcher.combine_a(hidden_states, topk_idx, topk_weights, forward_batch)
  DeepEPDispatcher.combine_b()

# python/sglang/srt/layers/moe/token_dispatcher/standard.py
  StandardDispatchOutput.format()