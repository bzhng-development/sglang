
# python/sglang/srt/disaggregation/nixl/conn.py
  TransferInfo.is_dummy()
  TransferInfo.from_zmq(cls, msg)
  KVArgsRegisterInfo.from_zmq(cls, msg)
  TransferStatus.is_done()
  NixlKVManager.__init__(args, disaggregation_mode, server_args, is_mla_backend)
  NixlKVManager.check_status(bootstrap_room)
  NixlKVManager.update_status(bootstrap_room, status)
  NixlKVManager.register_buffer_to_engine()
  NixlKVManager.send_kvcache(peer_name, prefill_kv_indices, dst_kv_ptrs, dst_kv_indices, dst_gpu_id, notif)
  NixlKVManager.send_aux(peer_name, prefill_aux_index, dst_aux_ptrs, dst_aux_index, notif)
  NixlKVManager.add_transfer_request(bootstrap_room, kv_indices, index_slice, is_last, chunk_id, aux_index)
  NixlKVManager.update_transfer_status()
  NixlKVManager.check_transfer_done(room)
  NixlKVSender.__init__(mgr, bootstrap_addr, bootstrap_room, dest_tp_ranks, pp_rank)
  NixlKVSender.init(num_kv_indices, aux_index)
  NixlKVSender.send(kv_indices)
  NixlKVSender.poll()
  NixlKVSender.failure_exception()
  NixlKVReceiver.__init__(mgr, bootstrap_addr, bootstrap_room, data_parallel_rank)
  NixlKVReceiver.init(kv_indices, aux_index)
  NixlKVReceiver.poll()
  NixlKVReceiver.failure_exception()

# python/sglang/srt/mem_cache/storage/nixl/hicache_nixl.py
  HiCacheNixl.__init__(file_path, plugin)
  HiCacheNixl.register_buffers(buffers, List[torch.Tensor], List[tuple]])
  HiCacheNixl.register_files(file_paths, open_file)
  HiCacheNixl.register_objects(keys, sizes)
  HiCacheNixl.get(key, target_location, target_sizes)
  HiCacheNixl.batch_get(keys, target_locations, target_sizes)
  HiCacheNixl.set(key, value, target_location, target_sizes)
  HiCacheNixl.batch_set(keys, values, target_locations, target_sizes)
  HiCacheNixl.exists(key)

# python/sglang/srt/mem_cache/storage/nixl/nixl_utils.py
  NixlBackendSelection.__init__(plugin)
  NixlBackendSelection.set_bucket(bucket_name)
  NixlBackendSelection.create_backend(agent)
  NixlRegistration.__init__(agent)
  NixlRegistration.create_query_tuples(key, mem_type, file_manager)
  NixlFileManager.__init__(base_dir)
  NixlFileManager.get_file_path(key)
  NixlFileManager.create_file(file_path)
  NixlFileManager.open_file(file_path)
  NixlFileManager.close_file(fd)
  NixlFileManager.files_to_nixl_tuples(file_paths)

# python/sglang/srt/mem_cache/storage/nixl/test_hicache_nixl_storage.py
  TestNixlUnified.setUp()
  TestNixlUnified.tearDown()
  TestNixlUnified.delete_test_file(file_path)
  TestNixlUnified.verify_tensors_equal(expected, actual)
  TestNixlUnified.verify_tensor_lists_equal(expected, actual)
  TestNixlUnified.test_single_set_get()
  TestNixlUnified.test_batch_set_get()
  TestNixlUnified.test_mixed_operations()
  TestNixlUnified.test_data_integrity()
  TestNixlUnified.test_basic_file_operations()
  TestNixlUnified.test_create_nixl_tuples()
  TestNixlUnified.test_error_handling()
  TestNixlUnified.test_register_buffers()
  TestNixlUnified.test_register_files_with_tuples()