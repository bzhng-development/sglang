
# python/sglang/srt/mem_cache/cpp_radix_tree/radix_tree.py
  RadixTreeCpp.__init__(disabled: bool, host_size: Optional[int], page_size: int, write_through_threshold: int)
  RadixTreeCpp.match_prefix(prefix: List[int]) -> Tuple[List[torch.Tensor], int, TreeNodeCpp, TreeNodeCpp]
  RadixTreeCpp.evict(num_tokens: int) -> List[torch.Tensor]
  RadixTreeCpp.lock_ref(handle: TreeNodeCpp, lock: bool) -> None
  RadixTreeCpp.writing_through(key: List[int], indices: torch.Tensor) -> Tuple[List[Tuple[IOHandle, torch.Tensor, torch.Tensor]], int]
  RadixTreeCpp.loading_onboard(host_node: TreeNodeCpp, new_device_indices: torch.Tensor) -> Tuple[IOHandle, List[torch.Tensor]]
  RadixTreeCpp.commit_writing_through(handle: IOHandle, success: bool) -> None
  RadixTreeCpp.commit_loading_onboard(handle: IOHandle, success: bool) -> None
  RadixTreeCpp.evictable_size() -> int
  RadixTreeCpp.protected_size() -> int
  RadixTreeCpp.total_size() -> int
  RadixTreeCpp.reset() -> None
  RadixTreeCpp.debug_print() -> None
