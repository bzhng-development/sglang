================================================================================
FUNCTION INDEX: weight_sync module
================================================================================
Total Functions: 5
Documented: 5


============================================================
FILE: python/sglang/srt/weight_sync/tensor_bucket.py
Functions: 4
============================================================


CLASS: FlattenedTensorBucket
----------------------------------------
  L  25: __init__(self, named_tensors: List[Tuple[str, torch.Tensor]], flattened_tensor: torch.Tensor, metadata: List[FlattenedTensorMetadata])
         📝 Initialize a tensor bucket from a list of named tensors OR from pre-fl

  L  79: get_flattened_tensor(self)
         → torch.Tensor
         📝 Get the flattened tensor containing all bucket tensors

  L  83: get_metadata(self)
         → List[FlattenedTensorMetadata]
         📝 Get metadata for all tensors in the bucket

  L  87: reconstruct_tensors(self)
         → List[Tuple[str, torch.Tensor]]
         📝 Reconstruct original tensors from flattened tensor with optimized perf


============================================================
FILE: python/sglang/srt/weight_sync/utils.py
Functions: 1
============================================================

MODULE FUNCTIONS:
----------------------------------------
  L  14: async def update_weights(engine: Engine,
        params_batch: list[tuple[str,
        torch.Tensor]],
        device_mesh_key: str,
        device_mesh: DeviceMesh,
        load_format: Optional[str])
         📝 Update weights for the inference engine.
