
# python/sglang/srt/eplb/eplb_algorithms/__init__.py
rebalance_experts(tokens_per_expert, num_physical_experts, num_local_physical_experts, num_groups, num_nodes, algorithm)
compute_algorithm(raw_algorithm, num_groups, num_nodes)

# python/sglang/srt/eplb/eplb_algorithms/deepseek.py
balanced_packing(weight, num_packs)
replicate_experts(weight, num_phy)
rebalance_experts_hierarchical(weight, num_physical_experts, num_groups, num_nodes, num_gpus)
rebalance_experts(weight, num_replicas, num_groups, num_nodes, num_gpus, enable_hierarchical)

# python/sglang/srt/eplb/eplb_algorithms/deepseek_vec.py
pack_groups(tokens_per_group, num_nodes)
make_redundant_experts_chunkwise(tokens_per_expert, num_physical_experts, num_local_physical_experts, num_physical_experts_per_chunk)
decode_rebalance_experts(tokens_per_expert, num_physical_experts, num_local_physical_experts)
prefill_rebalance_experts(tokens_per_expert, num_physical_experts, num_local_physical_experts, num_groups, num_nodes)
rebalance_experts(tokens_per_expert, num_physical_experts, num_local_physical_experts, num_groups, num_nodes, enable_hierarchical)